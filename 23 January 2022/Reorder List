# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def reorderList(self, head: Optional[ListNode]) -> None:
        """
        Do not return anything, modify head in-place instead.
        """
        slow= head
        fast = head.next
        while(fast!= None and fast.next!=None):
            slow= slow.next
            fast= fast.next.next
        
        second= slow.next
        slow.next= None
        
        prev=None
        while(second!=None):
            tmp =second.next
            
            second.next = prev
            prev=second
            second= tmp
            
        first = head
        second = prev
        
        while(second ):
            tmp1= first.next #2
            first.next= second #1->5
            tmp2= second.next #4
            second.next = tmp1 #1->5->2
            first = tmp1 #2
            second = tmp2
            
        
        
        
