# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def minDiffInBST(self, root: Optional[TreeNode]) -> int:
        dist = 1000
        prev=None
        stack=[]
        while(True):
            while(root):
                stack.append(root)
                root=root.left
            if not stack:
                return dist
            root= stack.pop()
            if prev is not None:
                dist= min(dist, abs(root.val-prev))
            prev=root.val
            # if popped.right:
            root= root.right
            
            
