# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution:
    def lowestCommonAncestor(self, root: 'TreeNode', p: 'TreeNode', q: 'TreeNode') -> 'TreeNode':
        if root==None:
            return
        if root==p or root==q:
            print(root.val)
            return root
        
        
        l= self.lowestCommonAncestor(root.left,p,q)
        
        r= self.lowestCommonAncestor(root.right,p,q)
        # print(root1)
        # print(root2)
        if l and r:
            return root   #in the backend implementation, the code returns root.val
        if l and not r:
            return l
        if not l and r:
            return r
        
        
